AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ReplyMint Backend (FastAPI on Lambda, eu-central-1)

Parameters:
  Environment:
    Type: String
    Default: staging
    AllowedValues: [staging, prod]
    Description: Environment name (staging/prod)
  
  LogRetentionDays:
    Type: Number
    Default: 14
    Description: CloudWatch log retention in days
  
  SlackWebhookUrl:
    Type: String
    Default: ""
    Description: Slack webhook URL for alerts (optional)

Globals:
  Function:
    Runtime: python3.11
    Timeout: 15
    MemorySize: 512
    Tracing: Active
    Environment:
      Variables:
        LOG_LEVEL: info
        ENVIRONMENT: !Ref Environment
        USERS_TABLE: !Ref UsersTable
        USAGE_COUNTERS_TABLE: !Ref UsageCountersTable
        EMAIL_LOGS_TABLE: !Ref EmailLogsTable
        SETTINGS_TABLE: !Ref SettingsTable

Resources:
  # DynamoDB Tables
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub replymint-${Environment}-users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenantId
          AttributeType: S
      KeySchema:
        - AttributeName: tenantId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true

  UsageCountersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub replymint-${Environment}-usage-counters
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenantId
          AttributeType: S
        - AttributeName: month
          AttributeType: S
      KeySchema:
        - AttributeName: tenantId
          KeyType: HASH
        - AttributeName: month
          KeyType: RANGE
      SSESpecification:
        SSEEnabled: true

  EmailLogsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub replymint-${Environment}-email-logs
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenantId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: tenantId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        SSEEnabled: true

  SettingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub replymint-${Environment}-settings
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenantId
          AttributeType: S
      KeySchema:
        - AttributeName: tenantId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true

  # IAM Role for Lambda Execution
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:DescribeTable
                Resource:
                  - !GetAtt UsersTable.Arn
                  - !GetAtt UsageCountersTable.Arn
                  - !GetAtt EmailLogsTable.Arn
                  - !GetAtt SettingsTable.Arn
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/replymint/${Environment}/*
        - PolicyName: CloudWatchMetrics
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'

  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Api-Key,Authorization'"
        AllowOrigin: !If 
          - IsProd
          - "'https://replymint.vercel.app'"
          - "'https://replymint-staging.vercel.app'"
        MaxAge: "'300'"
        AllowCredentials: false

  # FastAPI Lambda Function
  FastApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app/handler.handler
      CodeUri: .
      Description: !Sub ReplyMint FastAPI app - ${Environment}
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        ProxyApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY
        RootApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /
            Method: ANY

  # CloudWatch Log Group
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${FastApiFunction}
      RetentionInDays: !Ref LogRetentionDays

  # CloudWatch Alarms
  ErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-replymint-error-rate
      AlarmDescription: High error rate for ReplyMint API
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref FastApiFunction
      AlarmActions: 
        - !If [HasSlackWebhook, !GetAtt AlarmProcessorFunction.Arn, !Ref "AWS::NoValue"]

  DurationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-replymint-duration
      AlarmDescription: High latency for ReplyMint API
      MetricName: Duration
      Namespace: AWS/Lambda
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref FastApiFunction
      AlarmActions:
        - !If [HasSlackWebhook, !GetAtt AlarmProcessorFunction.Arn, !Ref "AWS::NoValue"]

  # Alarm Processor Lambda Function (Direct CloudWatch trigger)
  AlarmProcessorFunction:
    Type: AWS::Serverless::Function
    Condition: HasSlackWebhook
    Properties:
      Handler: app/alarm_processor.lambda_handler
      CodeUri: .
      Description: !Sub ReplyMint Alarm Processor - ${Environment}
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.11
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          SLACK_WEBHOOK_URL: !Ref SlackWebhookUrl

  # Alarm Processor Log Group
  AlarmProcessorLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: HasSlackWebhook
    Properties:
      LogGroupName: !Sub /aws/lambda/${AlarmProcessorFunction}
      RetentionInDays: !Ref LogRetentionDays

Conditions:
  IsProd: !Equals [!Ref Environment, prod]
  HasSlackWebhook: !Not [!Equals [!Ref SlackWebhookUrl, ""]]

Outputs:
  ApiUrl:
    Description: API Gateway base URL
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}
    Export:
      Name: !Sub replymint-${Environment}-ApiUrl
  
  UsersTableName:
    Description: Users DynamoDB table name
    Value: !Ref UsersTable
    Export:
      Name: !Sub replymint-${Environment}-UsersTable
  
  UsageCountersTableName:
    Description: Usage counters DynamoDB table name
    Value: !Ref UsageCountersTable
    Export:
      Name: !Sub replymint-${Environment}-UsageCountersTable
  
  EmailLogsTableName:
    Description: Email logs DynamoDB table name
    Value: !Ref EmailLogsTable
    Export:
      Name: !Sub replymint-${Environment}-EmailLogsTable
  
  SettingsTableName:
    Description: Settings DynamoDB table name
    Value: !Ref SettingsTable
    Export:
      Name: !Sub replymint-${Environment}-SettingsTable
  
  LambdaExecutionRoleArn:
    Description: Lambda execution role ARN
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub replymint-${Environment}-LambdaExecutionRole
